<% javascript 'video.js' %>
<% javascript 'audio.min.js' %>
<% stylesheet 'video-js.css' %>
<% stylesheet 'jquery-ui-1.8.1.custom' %>

<% content_for :local_js do %>
  audiojs.events.ready(function() {
    var as = audiojs.createAll();
    });

$( "#new_group_name_skel" ).autocomplete({
  source: "/directory/user/<%= @generic_file.depositor %>/groups/"
});

$('input[name=revision]:radio').on('click', function() {
    $('#save_version_note').fadeIn('slow');
  });
<% end %>

<% content_for :local_css do %>
.audiojs {
  width: 338px;
}
<% end %>

<h1 class="lower">Edit <%= @generic_file.title.join(' | ') %></h1>

<div class="columns two-b">
  <div class="column first">
    <%= render :partial => 'media_display' %>
  </div>
  <div class="column second">
    <h2 class="non lower">Actions</h2>
    <%= link_to "Browse view", generic_file_path %>
    <table class="verticalheadings">
      <tbody>
        <tr>
          <th>Revisions</th>
          <td>
            <h3>Revision history</h3>
<%= form_for @generic_file, :url => generic_file_path, :html => {:multipart => true, :class => 'form-horizontal', :id => 'fileupload'} do |f| %>
    <%= hidden_field_tag('generic_file[terms_of_service]', '1') %>
            <% @generic_file.content.versions.each_with_index do |version, index| %>
              <%= radio_button_tag(:revision, version.versionID, index == 0) %>
              <%= label_tag("revision_#{version.versionID}".to_sym, "Restore from #{version.dsCreateDate.to_formatted_s(:long_ordinal)} [by #{@generic_file.content.version_committer(version)}]") %>
              <%# @generic_file.depositor %>
              <br />
            <% end %>
            <div id="save_version_note" class="ui-state-highlight hidden">You must click &quot;Save Revision&quot; to revert a previous version of this file</div>
            <%= f.submit "Save Revision", :name => "revert_submit", :id => "revert_submit", :class => "btn-primary btn-large" %>
            <h3>New revision</h3>
            <p>Upload a new version of this file from your computer.</p>
            <p id="upload_field">
            <%= file_field_tag "filedata"  %>
            </p>
           <%= f.submit "Upload New Version", :name => "upload_submit", :id => "upload_submit", :class => "btn-primary btn-large" %>
            </td>
<% end %>
          </td>
        </tr>
        <!--
        Removed from testing feedback refs #940
        <tr>
          <th>Audit</th>
          <td>
            <%- stat= @generic_file.audit_stat(false)  %>
            Audit status: <%= (stat == 1 ? 'passing' : (stat == 0 ? 'failing' : stat)) %>  <br />         
          </td>
        </tr>
        -->
      </tbody>
    </table>
<%= form_for @generic_file, :url => generic_file_path, :html => {:multipart => true, :class => 'form-horizontal', :id => 'fileupload'} do |f| %>
    <h2 class="non lower">Permissions</h2>
    <table class="verticalheadings">
      <tbody>
        <tr>
          <th>Share with</th>
          <td><%=render :partial => "permission_new", :locals => { :gf => @generic_file } %></td>
        </tr>
      </tbody>
    </table>
    <h2 class="non lower">Descriptions</h2>
    <%= hidden_field_tag('generic_file[terms_of_service]', '1') %>
    <table class="verticalheadings">
      <tbody>
        <tr>
          <th> <%= f.label :resource_type, "Resource Types", :class=>"control-label", :for=>"resource_type" %></th>
          <td>
            <%= f.select "resource_type", options_for_select(ScholarSphere::Application::config.resource_types.keys, @generic_file.resource_type.to_a), {}, {:multiple=>true, :size=>7} %>
            <p class="help-block">You may select multiple types to apply<p>
          </td>
        </tr>
      <% @terms.each do |t| %>
        <% next if t.empty? %> 
        <% key = t.to_s.split("generic_file__").last %>
        <%# consider these fields to be uneditable via the web form %>
        <% next if ['part_of', 'date_modified', 'date_uploaded', 'format', 'resource_type'].include?(key) %>
        <% logger.info "!!!! Generic file has no method #{key}" unless @generic_file.respond_to?(key) %>
        <% if @generic_file.respond_to?(key) %>
          <% vals =  @generic_file.send(key) %>
          <% # not an arry lets just shove it in one %>
          <% vals = [vals] unless vals.is_a?(Array) %>
          <%# if vals is zero we create an empty array to loop over for output %>
          <% vals = [''] if vals.count == 0 %>
          <% vals.each_with_index do |v, index| %>
	    <%# a hacky way to change selected fields' labels %>
	    <% label = nil %>
      <% label = "Location" if key == "based_near" %>
      <% label = "Keyword" if key == "tag" %>
            <tr>
              <th>
		<% if label %>
		  <%= f.label key, label, :class=>"control-label" %>
                <% else %>
                  <%= f.label key, :class=>"control-label" %>
                <% end %>
              </th>
              <td>
                <div class="control-group" <% if index == 0%> id="additional_<%= key %>_clone" <% end %>>
                  <div class="controls">
                    <%= f.text_field :title, :name=>"generic_file[#{key}][]", :id => "generic_file_"+key, :value=>v %> 
                    <% if index == 0 %>
                      <%= f.submit :value => "+", :name=> "additional_#{key}", :id => "additional_#{key}_submit", :class => "adder"  %>
                      &nbsp;
                      <span class="formHelpContainer">
                        <span class="formHelper" id="generic_file_<%= key %>_help">
                        <%= ScholarSphere::Application.config.metadata_help["generic_file_" + key] %>
                        </span>
                      </span>
                    <% end %>
                  </div>
                </div>
                <div id="additional_<%= key %>_elements"></div>
              </td>
            </tr>
          <% end %>
        <% end %> 
      <% end %>
        <tr>
          <td colspan="2"> <%= f.submit "Save Descriptions", :name => "upload_submit", :id => "upload_submit", :class => "btn-primary btn-large" %> </td>
        </tr>
      </tbody>
    </table>
<% end %>
    <%= button_to "Delete File", generic_file_path(@generic_file), :confirm => "Do you really want to delete this file from ScholarSphere? This action is irreversible.", :method => :delete, :class => "btn-primary btn-large" %>
  </div> <!-- /column second -->
</div><!-- /columns two-b -->
